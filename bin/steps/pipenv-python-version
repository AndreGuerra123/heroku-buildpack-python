#!/usr/bin/env bash

# Detect Python-version with Pipenv.
# If has runtime.txt does nothing.
# If has Pipfile.lock file tries to get version from python version from this lock file. Returns default if not found.
# If does not have Pipfile.lock uses Pipfile to get python version from this config file. Returns default if not found.
# Note it must have one of the two as defined in detect if is a Pipenv managed project.

if [ -f "$BUILD_DIR/Pipfile" ] || [ -f "$BUILD_DIR/Pipfile.lock"]; # Check if Pipenv is the package manager
then
    if [! -f "$BUILD_DIR/runtime.txt"]; # Check if managed by Pipenv and runtime.txt file not set by user.
    then 
        set +e
        if [ -f "$BUILD_DIR/Pipfile.lock" ]; 
        then #Priority for Pipenv python verions extraction using Pipfile.lock lock file.
            PIPENV_PYTHON_FULL_VERSION=$(jq -r '._meta.requires.python_full_version' "$BUILD_DIR/Pipfile.lock" | tr -d '"') 
            PIPENV_PYTHON_VERSION=$(jq -r '._meta.requires.python_version' "$BUILD_DIR/Pipfile.lock" | tr -d '"')
        else #Alternative Pipenv python version extraction using Pipfile configuration file.
            PIPENV_PYTHON_FULL_VERSION = $(sed -nr "/^\[requires\]/ { :l /^python_full_version[ ]*=/ { s/.*=[ ]*//; p; q;}; n; b l;}" "$BUILD_DIR/Pipfile" | tr -d '"')  
            PIPENV_PYTHON_VERSION =  $(sed -nr "/^\[requires\]/ { :l /^python_version[ ]*=/ { s/.*=[ ]*//; p; q;}; n; b l;}" "$BUILD_DIR/Pipfile" | tr -d '"')
        fi
        set -e
        # Extraction done. Setting the version captured.
        if is_full_python_version "$PIPENV_PYTHON_FULL_VERSION" #Priority for full python version
        then
            echo "python-$PIPENV_PYTHON_FULL_VERSION" > "$BUILD_DIR/runtime.txt" #Alternative latest python version
        elif is_major_python_version "$PIPENV_PYTHON_VERSION"
        then
            if [ "$PIPENV_PYTHON_VERSION" = 2.7 ]; 
            then
                echo "$LATEST_27" > "$BUILD_DIR/runtime.txt"
            elif [ "$PIPENV_PYTHON_VERSION" = 3.4 ]; 
            then
                echo "$LATEST_34" > "$BUILD_DIR/runtime.txt" # Added missing latest 3.4
            elif [ "$PIPENV_PYTHON_VERSION" = 3.5 ]; 
            then
                echo "$LATEST_35" > "$BUILD_DIR/runtime.txt" # Added missing latest 3.5
            elif [ "$PIPENV_PYTHON_VERSION" = 3.6 ]; 
            then
                echo "$LATEST_36" > "$BUILD_DIR/runtime.txt"
            elif [ "$PIPENV_PYTHON_VERSION" = 3.7 ]; 
            then
                echo "$LATEST_37" > "$BUILD_DIR/runtime.txt"
            fi
        fi
    fi
fi

