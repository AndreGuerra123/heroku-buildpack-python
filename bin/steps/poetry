#!/usr/bin/env bash

# export CLINT_FORCE_COLOR=1
# export PIPENV_FORCE_COLOR=1
# shellcheck source=bin/utils
source "$BIN_DIR/utils"
set -e

if [[ -f pyproject.toml ]] || [[ -f poetry.py ]]; then
    # Measure that we're using Pipenv.
    mcount "tool.poetry"

    # PIP_EXTRA_INDEX_URL allows for an alternate pypi URL to be used.
    if [[ -r "$ENV_DIR/PIP_EXTRA_INDEX_URL" ]]; then
        PIP_EXTRA_INDEX_URL="$(cat "$ENV_DIR/PIP_EXTRA_INDEX_URL")"
        export PIP_EXTRA_INDEX_URL
        mcount "buildvar.PIP_EXTRA_INDEX_URL"
    fi

    # Set SLUGIFY_USES_TEXT_UNIDECODE, required for Airflow versions >=1.10
    if [[ -r "$ENV_DIR/SLUGIFY_USES_TEXT_UNIDECODE" ]]; then
        SLUGIFY_USES_TEXT_UNIDECODE="$(cat "$ENV_DIR/SLUGIFY_USES_TEXT_UNIDECODE")"
        export SLUGIFY_USES_TEXT_UNIDECODE
        mcount "buildvar.SLUGIFY_USES_TEXT_UNIDECODE"
    fi

    if [[ -f pyproject.toml ]]; then
        export POETRY_VERSION=$(sed -nr "/^\[build-system\]/ { :l /^requires[ ]*=/ { s/.*=[ ]*//; p; q;}; n; b l;}" "$BUILD_DIR/pyproject.toml" | tr -d '"]')
        puts-step "Installing Poetry version $POETRY_VERSION…"
        /app/.heroku/python/bin/pip install pipenv==$POETRY_VERSION --upgrade --upgrade-strategy only-if-needed &> /dev/null
    else
        puts-step "Installing Poetry latest version…"
        /app/.heroku/python/bin/pip install pipenv --upgrade --upgrade-strategy only-if-needed &> /dev/null
    fi
     
    # Install the dependencies (lock file if does not exist it is generated here). 
    # These dependencies will only exist on the virtualenv but they can be exported (without any artifacts) using pip (see below) to be installed system-wide.
    # Do not skip pip install later.

    if [ "$INSTALL_TEST" ]; then
        puts-step "Installing development dependencies with Poetry…"
        /app/.heroku/python/bin/poetry install 2>&1 | cleanup | indent
    else
        puts-step "Installing deployment dependencies with Poetry…"
        /app/.heroku/python/bin/poetry install --no-dev 2>&1 | cleanup | indent
    fi

    # Export requirements.txt
    /app/.heroku/python/bin/poetry run pip freeze . > requirements.txt 
    export SKIP_PIP_INSTALL=1

fi

